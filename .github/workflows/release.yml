name: Build and Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - 'v1.1.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libgl1-mesa-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxxf86vm-dev

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          $env:OUTPUT_NAME = "go_tasks_windows_amd64.exe"
          go build -o "$env:OUTPUT_NAME"

      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: |
          GOOS=darwin GOARCH=amd64 go build -o go_tasks_darwin_amd64

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          GOOS=linux GOARCH=amd64 go build -o go_tasks_linux_amd64

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go_tasks_${{ matrix.os }}
          path: go_tasks_*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./binaries

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Zip Binaries
        run: |
          cd binaries
          zip -r ../go_tasks.zip ./*

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./go_tasks.zip
          asset_name: go_tasks.zip
          asset_content_type: application/zip

